{"version":3,"file":"static/js/293.7d90d77b.chunk.js","mappings":"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","sources":["API/ApiRequest.js","components/MoviesList/MoviesLink.styled.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '177f1ce19eda5f5e066d2992170007b1';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Link = styled(NavLink)`\n  color: rgb(24, 6, 82);\n  font-size: 1.2rem;\n  text-decoration: none;\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieItem = styled.li`\n  list-style-position: inside;\n  list-style-type: square;\n\n  padding: 5px;\n  max-width: auto;\n`;\n\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  flex-grow: 1;\n`; ","import { useLocation } from \"react-router-dom\";\nimport { Link, MovieItem, MoviesListStyled } from \"./MoviesLink.styled\";\nimport PropTypes from 'prop-types';\n\n\nexport const MoviesList = ({movies}) => {\n    const location = useLocation();\n    \n    return (\n        <MoviesListStyled>\n          {movies.map(({ id, title }) => {\n            return (\n              <MovieItem key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </MovieItem>\n            );\n          })}\n        </MoviesListStyled>\n    );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};","import styled from \"styled-components\";\n\nexport const FormBtnStyled = styled.button`\n    font-size: 16px;\n    padding: 8px 16px;\n    margin-left: 10px;\n    background-color: orangered;\n    border: 0;\n    border-radius: 4px;\n    color: white;\n    cursor: pointer;\n    transition: background-color linear 250ms;\n    &:hover {\n        background-color: #c20a4e;\n    }\n `;\n\nexport const InputStyled = styled.input`\n  padding: 5px 10px;\n  font-size: 16px;\n  outline: 0px solid #e30b5c;\n  border-radius: 4px;\n  transition: border-color linear 250ms;\n  &:focus {\n    outline: 0;\n    border: 2px solid orangered;\n  }\n`;","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormBtnStyled, InputStyled\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n      event.preventDefault();\n\n      const value = query.trim();\n      if (value) {\n         onSubmit(query);\n         setQuery('');\n      }  \n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <InputStyled\n          onChange={handleChange}\n          name=\"query\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <FormBtnStyled type=\"submit\">Search</FormBtnStyled>\n      </form>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const MovieBox = styled.div`\n  display: block;\n`;\n","import { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport * as Api from '../../API/ApiRequest';\n\nimport { MovieBox } from \"./Movies.styled\";\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const handleSearch = value => {\n       setSearchParams({ query: value });\n    };\n    \n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        if (query) {\n            Api.fetchMovieByQuery(query)\n              .then(movies => setMovies(movies))\n              .catch('error');\n        }\n    }, [searchParams]);\n    return (\n      <MovieBox>\n        <SearchBar onSubmit={handleSearch} />\n        {movies.length > 0 && <MoviesList movies={movies} />}\n      </MovieBox>\n    );\n\n}\n\nexport default Movies;\n\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","id","fetchMovieCast","cast","fetchMovieReviews","Link","styled","NavLink","MovieItem","MoviesListStyled","MoviesList","movies","location","useLocation","map","title","to","state","from","FormBtnStyled","InputStyled","SearchBar","onSubmit","useState","setQuery","event","preventDefault","trim","onChange","e","target","value","toLowerCase","name","type","autoComplete","autoFocus","placeholder","MovieBox","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","Api","then","catch","length"],"sourceRoot":""}