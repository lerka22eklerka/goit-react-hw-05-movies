{"version":3,"file":"static/js/526.388f15bf.chunk.js","mappings":"6SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFX,cAC3BG,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCADQ,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,oIC9BjBQ,EAAQC,EAAAA,GAAAA,GAAH,+IAOLC,EAAaD,EAAAA,GAAAA,GAAH,6IAQVE,EAAYF,EAAAA,GAAAA,GAAH,2HAQTG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,2I,SCMjB,EA3Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,IAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA0BC,MAAK,SAAAJ,GAAM,OAAIC,EAAUD,EAAd,GACtC,GAAE,IAEEA,EAIL,OACE,iCACE,SAACP,EAAD,4BACA,SAACE,EAAD,UACGK,EAAOK,KAAI,YAAoB,IAAjBhB,EAAgB,EAAhBA,GAAIiB,EAAY,EAAZA,MACjB,OACE,SAACV,EAAD,WACE,SAACC,EAAD,CAAMU,GAAE,kBAAalB,GAArB,SAA4BiB,KADdjB,EAInB,QAIR,C","sources":["API/ApiRequest.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '177f1ce19eda5f5e066d2992170007b1';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Title = styled.h2`\n  font-family: Helvetica, 'Trebuchet MS', Verdana, sans-serif;\n  font-size: 26px;\n  font-weight: 800;\n  margin: 0;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  flex-grow: 1;\n`; \n\nexport const MovieItem = styled.li`\n  list-style-position: inside;\n  list-style-type: square;\n\n  padding: 5px;\n  max-width: auto;\n`;\n\nexport const Link = styled(NavLink)`\n  color: rgb(24, 6, 82);\n  font-size: 1.2rem;\n  text-decoration: none;\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Api from '../../API/ApiRequest';\nimport { Link, MovieItem, MoviesList, Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    Api.fetchTrendingMovies().then(movies => setMovies(movies));\n  }, []);\n\n  if (!movies) {\n    return;\n  }\n\n  return (\n    <>\n      <Title>Trending now</Title>\n      <MoviesList>\n        {movies.map(({ id, title }) => {\n          return (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`}>{title}</Link>\n            </MovieItem>\n          );\n        })}\n      </MoviesList>\n    </>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: PropTypes.array,\n};\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","id","fetchMovieCast","cast","fetchMovieReviews","Title","styled","MoviesList","MovieItem","Link","NavLink","useState","movies","setMovies","useEffect","Api","then","map","title","to"],"sourceRoot":""}