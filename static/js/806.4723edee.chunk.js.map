{"version":3,"file":"static/js/806.4723edee.chunk.js","mappings":"6SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFX,cAC3BG,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCADQ,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,gIC/BjBQ,EAAcC,EAAAA,GAAAA,GAAH,wGAMXC,EAAaD,EAAAA,GAAAA,GAAH,2G,SC4BvB,EA9BgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANCE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBH,GACnBI,KAAKL,GACLM,MAAM,QACV,GAAE,CAACL,KAGH,8BACGF,EAAQQ,OAAS,GAChB,SAACZ,EAAD,UACGI,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnB,EAApB,EAAoBA,GAApB,OACX,SAACM,EAAD,WACI,4BACE,qCAAaY,MACb,uBAAIC,QAHOnB,EADN,OAUf,qEAIT,C","sources":["API/ApiRequest.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '177f1ce19eda5f5e066d2992170007b1';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  list-style: none;\n`;\nexport const ReviewsBox = styled.li`\n\n  > div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as Api from '../../API/ApiRequest';\nimport { ReviewsBox, ReviewsList } from './Reviews.styled';\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n     useEffect(() => {\n       Api.fetchMovieReviews(movieId)\n         .then(setReviews)\n         .catch('error');\n     }, [movieId]);\n    \n    return (\n      <>\n        {reviews.length > 0 ? (\n          <ReviewsList>\n            {reviews.map(({ author, content, id }) => (\n              <ReviewsBox key={id}>\n                  <div>\n                    <h3>Author: {author}</h3>\n                    <p>{content}</p>\n                  </div>\n              </ReviewsBox>\n            ))}\n          </ReviewsList>\n        ) : (\n          <p>So sorry... But there is no reviews yet!</p>\n        )}\n      </>\n    );\n}\n\nexport default Reviews;"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","id","fetchMovieCast","cast","fetchMovieReviews","ReviewsList","styled","ReviewsBox","useState","reviews","setReviews","movieId","useParams","useEffect","Api","then","catch","length","map","author","content"],"sourceRoot":""}