{"version":3,"file":"static/js/219.e3176769.chunk.js","mappings":"6SAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFX,cAC3BG,EAD2B,yBAI1BA,EAASC,KAAKC,SAJY,2CAAH,qDAOnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCAC+CO,EAD/C,gCADQ,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,oBACcT,EADd,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAc,mCAAG,WAAMD,GAAN,uFACLP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAClBH,EADkB,kBACAU,EADA,4BACsBT,EADtB,2BADQ,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,yHC/BjBQ,EAAWC,EAAAA,GAAAA,GAAH,mIAQRC,EAAWD,EAAAA,GAAAA,GAAH,yMAcRE,EAAYF,EAAAA,GAAAA,EAAH,6K,2BCoBtB,EArCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAON,EAAP,KAAaO,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANEE,EAAAA,EAAAA,YAAU,WACVC,EAAAA,GAAmBH,GAChBI,KAAKL,GACLM,MAAM,QACV,GAAE,CAACL,KAGF,8BACGR,GACC,SAACE,EAAD,UACGF,EAAKc,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,UAACb,EAAD,WACGa,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAKJ,KAGPE,IAAgB,gBAAKC,IAAKE,EAAYD,IAAKJ,KAC7C,SAACV,EAAD,UAAYU,KACZ,UAACV,EAAD,yBAAuBW,OATVlB,EADP,OAeZ,+FAMP,C","sources":["API/ApiRequest.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '177f1ce19eda5f5e066d2992170007b1';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n  margin-top: 10px;\n  margin-left: 20px;\n  display: flex;\nflex-direction: column;\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\ndisplay: flex;\nflex-direction: column;\n  > img {\n    width: 200px;\n    height: auto;\n    margin-top: 15px;\n  }\n  > p {\n    font-size: 16px;\n    font-weight: 700;\n  }\n`;\n\nexport const CastTitle = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  font-family: Helvetica, 'Trebuchet MS', Verdana, sans-serif;\n`;","import { useEffect, useState } from \"react\";\nimport * as Api from '../../API/ApiRequest';\nimport { CastItem, CastList, CastTitle } from \"./Cast.styled\";\nimport { useParams } from \"react-router-dom\";\nimport defaultImg from '../../img/image-coming-soon.webp';\n\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n    useEffect(() => {\n    Api.fetchMovieCast(movieId)\n      .then(setCast)\n      .catch('error');\n  }, [movieId]);\n\n  return (\n    <>\n      {cast ? (\n        <CastList>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <CastItem key={id}>\n              {profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  alt={name}\n                />\n              )}\n              {!profile_path && <img src={defaultImg} alt={name} />}\n              <CastTitle>{name}</CastTitle>\n              <CastTitle>Character: {character}</CastTitle>\n            </CastItem>\n          ))}\n        </CastList>\n      ) : (\n        <p>\n          So sorry... But we don't have information about cast of this movie\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieById","id","fetchMovieCast","cast","fetchMovieReviews","CastList","styled","CastItem","CastTitle","useState","setCast","movieId","useParams","useEffect","Api","then","catch","map","name","character","profile_path","src","alt","defaultImg"],"sourceRoot":""}